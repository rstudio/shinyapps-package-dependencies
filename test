#!/bin/bash

black () { color_text 30; }
blue () { color_text 34; }
green () { color_text 32; }
cyan () { color_text 36; }
red () { color_text 31; }
purple () { color_text 35; }
brown () { color_text 33; }
light_gray () { color_text 37; }

color_text () {
  while read data; do echo -e "\033[$1m$data"; done
  echo -e -n "\033[0m" # clear the color
}

echo " ***** SETUP..." | purple
# make sure apt-get is up to date
apt-get update -qq

# install ts command (used later in this script)
apt-get install -qq -y moreutils

DIR=`dirname $0`

if [ $# -eq 0 ]; then
    PACKAGES=$(ls -1 -d $DIR/packages/* | grep -v gsl | tr '\n' '\0' | xargs -0 -n 1 basename)
else
    PACKAGES=$@
fi

# install pak if it doesn't already exist
echo " ***** INSTALL PAK..." | purple
Rscript "$DIR/pak/setup.R" | ts

for PACKAGE in $PACKAGES; do

    PACKAGE_DIR=$DIR/packages/$PACKAGE

    echo " ***** PACKAGE $PACKAGE" | purple

    echo " ***** INSTALLING $PACKAGE..." | purple
    if [ -f $PACKAGE_DIR/install ]; then
        bash $PACKAGE_DIR/install | ts
    else
        Rscript "$DIR/pak/install_pkg.R" $PACKAGE | ts
    fi

    echo " ***** TESTING $PACKAGE..." | purple
    if [ -f $PACKAGE_DIR/test.R ]; then
        sudo R --verbose -f $PACKAGE_DIR/test.R
    else
        sudo R -e "install.packages('$PACKAGE', repos='http://cran.rstudio.com/'); library('$PACKAGE')"
    fi

    return_code=$?
    if [[ $return_code != 0 ]] ; then
        echo "$PACKAGE... FAILED" | red
        exit $return_code
    else
        echo "$PACKAGE... SUCCESS" | green
    fi
done

exit 0
